# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
authors = ["{{ cookiecutter.organization }} <{{ cookiecutter.email }}>"]
repository = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_name }}"
homepage = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_name }}"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Programming Language :: Python :: 3",
]
packages = [
    { include = "{{ cookiecutter.project_slug }}" ,from="src"},
]

{% if cookiecutter.create_example_template == 'cli' %}
[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"{{ cookiecutter.project_name }}" = "{{ cookiecutter.project_name.lower().replace(' ', '_').replace('-', '_') }}.__main__:run"
{% endif %}

[tool.poetry.dependencies]
python = "^{{ cookiecutter.minimal_python_version }},<4.0"
{% if cookiecutter.create_example_template == 'cli' %}
typer = "^0.7.0"
tqdm="^4.64.1"
{% endif %}
{% if cookiecutter.create_example_template == 'server' %}
fastapi = "^0.98.0"
uvicorn = "^0.23.2"
requests = "^2.31.0"
alembic = "^1.11.3"
psycopg2-binary = "^2.9.7"
asyncpg = "^0.28.0"
SQLAlchemy = "^2.0.20"
gunicorn = "^21.2.0"
{% endif %}

[tool.poetry.group.dev.dependencies]
black = "^23.10.1"
pytest = "^7.1.2"
allure-pytest = "^2.10.0"
pre-commit = "^2.21.0"
darglint = "^1.8.1"
pytest-html = "^3.2.0"
coverage = "^7.0.5"
coverage-badge = "^1.1.0"
black = "^22.12.0"
pytest-cov = "^4.0.0"
ipython = "^8.16.1"
pytest-cov = "^4.1.0"
httpx = "^0.24.1"
pytest-asyncio = "^0.21.1"

[tool.black]
# https://github.com/psf/black
target-version = ["py{{ cookiecutter.minimal_python_version.replace('.', '') }}"]
line-length = {{ cookiecutter.line_length }}
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''



[tool.cruft]
skip = [".env"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
asyncio_mode = 'auto'

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "{{ cookiecutter.project_name }}"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
